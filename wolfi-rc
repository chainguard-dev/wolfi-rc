# Copyright 2023 Chainguard, Inc.
# Author: Dustin Kirkland <kirkland@chainguard.dev>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

HELP="
These are set of shell functions that facilitate package and image development
on Wolfi and Chainguard, within a command line environment.

Below, you can find some helpful hints on the available commands, and what
they do...

 - wolfi-branch [BRANCH_NAME]: Get your branch of the WOlfi OS source code
   - NOTE: You must set GH_USER to your github username
 - wolfi-grype [TARGET]: Run grype on a given target
 - wolfi-local: Launch latest Wolfi in a docker container, with a local package repository
 - wolfi-sdk: Launch latest Wolfi in a docker container for building packages
 - wolfi-shell: Launch latest Wolfi in a docker container
 - wolfi-source: Get the current Wolfi OS source code
"

function info() {
	echo "INFO: $@"
}

function error() {
	echo "ERROR: $@" 1>&2
}

function wolfi() {
	echo "$HELP"
}

function _wolfi-check-deps() {
	type git 2>&1 >/dev/null || error "You need to install 'git': sudo apt install git"
	type docker 2>&1 >/dev/null || error "You need to install 'git': sudo apt install docker"
	type melange 2>&1 >/dev/null || error "You need to install 'melange': go install chainguard.dev/melange@latest"
}

_wolfi-check-deps

function wolfi-branch() {
	local URL="https://github.com/$GH_USER/wolfi-os.git"
	[ -z "$1" ] && error "You must specify a branch name" && return
	[ -z "$GH_USER" ] && error "You must set GH_USER to your github username" && return
	local DIR=$(mktemp -d wolfi-XXXXXXXX)
	cd "$DIR"
	git clone "$URL" wolfi-os || error "Ensure that your fork is named 'wolfi-os'"
	cd wolfi-os
	git switch "$1" || git branch "$1" && git switch "$1"
}

function wolfi-grype() {
	docker pull cgr.dev/chainguard/grype:latest
	docker run --rm -ti cgr.dev/chainguard/grype "$@"
}

function _wolfi-latest() {
	# Internal function, ensure we have latest wolfi in our local docker image cache
	docker pull cgr.dev/chainguard/wolfi-base:latest
}

function wolfi-local() {
	_wolfi-latest
	grep -qs "This is the main package repository for the Wolfi project" README.md 2>/dev/null || wolfi-source
	mkdir -p packages
	[ -f local-melange.rsa ] || melange keygen local-melange.rsa
	make local-wolfi
}

function wolfi-sdk() {
	_wolfi-latest
	grep -qs "This is the main package repository for the Wolfi project" README.md 2>/dev/null || wolfi-source
	make dev-container
}

function wolfi-shell() {
	_wolfi-latest
	docker run --rm -it $DOCKER_RUN_OPTS -v bash cgr.dev/chainguard/wolfi-base:latest "$@"
}

function wolfi-source() {
	local URL="https://github.com/wolfi-dev/os.git"
	local DIR=$(mktemp -d wolfi-XXXXXXXX)
	cd "$DIR"
	git clone --depth=1 "$URL" wolfi-os
	cd wolfi-os
	info "You are in a clean git cloned directory of $URL"
}
