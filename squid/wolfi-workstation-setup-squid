#!/bin/sh

set -e
set -x

# Setup a Chainguard Workstation to use a squid caching proxy on localhost for downloads
# Use SSL Bumping to handle https traffic
# Largely inspired by: https://rasika90.medium.com/how-i-saved-tons-of-gbs-with-https-caching-41550b4ada8a
# This script should be idempotent

# Specify a directory for squid's caching and logs
# Here, we're using /tmp because that's mounted as tmpfs (memory) on the workstations
SQUID_DIR=/tmp/squid
CERTS_DIR=$SQUID_DIR/certs
umask 007
mkdir -p $CERTS_DIR

# Install squid and openssl
sudo apk update
sudo apk add squid openssl ca-certificates
sudo rm -rf $SQUID_DIR

# Generate our self-signed SSL certs
cd $CERTS_DIR
openssl req -new -newkey rsa:2048 -days 7 -nodes -x509 -extensions v3_ca -keyout squid-self-signed.key -out squid-self-signed.crt -subj "/C=US/ST=Chain/L=Guard/O=Eng/CN=localhost"
# Convert the cert into a trusted certificate in DER format.
openssl x509 -in squid-self-signed.crt -outform DER -out squid-self-signed.der
# Convert the cert into a trusted certificate in PEM format.
openssl x509 -in squid-self-signed.der -inform DER -outform PEM -out squid-self-signed.pem
# Generate the settings file for the Diffie-Hellman algorithm.
openssl dhparam -outform PEM -out squid-self-signed_dhparam.pem 2048
cp -f squid-self-signed.pem squid-self-signed.crt

# Configure local applications to use an http proxy on localhost:127.0.0.1
# This means that each workstation would be a caching proxy for itself
# Alternatively, we could setup one squid server for all of the workstations to use and share,
# in which case, we'd point all of these configurations to that one shared caching proxy

# Grab a timestamp, which we'll use for backing up any configuration files we regenerate
TIMESTAMP=$(date +%Y%m%d%H%M%S)

# Setup curl config
[ -f $HOME/.curlrc ] && mv -f $HOME/.curlrc $HOME/.curlrc.$TIMESTAMP
cat >$HOME/.curlrc <<EOF
proxy=127.0.0.1:3128
cacert=$CERTS_DIR/squid-self-signed.pem
EOF

# Setup wget config
[ -f $HOME/.wgetrc ] && mv -f $HOME/.wgetrc $HOME/.wgetrc.$TIMESTAMP
cat >$HOME/.wgetrc <<EOF
use_proxy=yes
http_proxy=127.0.0.1:3128
https_proxy=127.0.0.1:3128
ca_certificate=$CERTS_DIR/squid-self-signed.pem
EOF

# Setup pip config
mkdir -p $HOME/.config/pip
[ -f $HOME/.config/pip/pip.conf ] && mv -f $HOME/.config/pip/pip.conf $HOME/.config/pip/pip.conf.$TIMESTAMP
cat >$HOME/.config/pip/pip.conf <<EOF
[global]
proxy = 127.0.0.1:3128
cert = $CERTS_DIR/squid-self-signed.pem
EOF

# Setup squid config
cat >$SQUID_DIR/squid.conf <<EOF
access_log $SQUID_DIR/squid.log squid
cache_store_log $SQUID_DIR/store.log
cache_log $SQUID_DIR/cache.log
acl intermediate_fetching transaction_initiator certificate-fetching
http_access allow intermediate_fetching
acl localnet src 127.0.0.1/32
acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 21
acl Safe_ports port 443
acl Safe_ports port 1025-65535
acl Safe_ports port 777
acl CONNECT method CONNECT
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
http_access allow localhost manager
http_access deny manager
http_access allow localhost
http_access deny to_localhost
http_access deny to_linklocal
http_access deny all
http_port 3128 tcpkeepalive=60,30,3 ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=20MB tls-cert=$CERTS_DIR/squid-self-signed.crt tls-key=$CERTS_DIR/squid-self-signed.key cipher=HIGH:MEDIUM:!LOW:!RC4:!SEED:!IDEA:!3DES:!MD5:!EXP:!PSK:!DSS options=NO_TLSv1,NO_SSLv3 tls-dh=prime256v1:$CERTS_DIR/squid-self-signed_dhparam.pem
sslcrtd_program /usr/libexec/security_file_certgen -s $SQUID_DIR/ssl_db -M 100MB
sslcrtd_children 5
ssl_bump server-first all
ssl_bump stare all
sslproxy_cert_error deny all
coredump_dir $SQUID_DIR
maximum_object_size 6 GB
cache_mem 8192 MB
cache_dir ufs $SQUID_DIR 32000 16 256
refresh_pattern -i .(jar|zip|whl|gz|bz)  259200 20% 259200
refresh_pattern .  0 20% 4320
EOF

# Initialize cert db at 100MB, which should hold 25K certificates
/usr/libexec/security_file_certgen -c -s $SQUID_DIR/ssl_db -M 100

# Initialize squid directories
sudo chown -R nobody:$(id -g) $SQUID_DIR
sudo squid -k kill || sudo squid -k shutdown || sudo killall squid || true
sleep 1
sudo squid -f $SQUID_DIR/squid.conf -z
sleep 1

# Launch squid (will drop privileges and run as "nobody")
# -N runs it in the foreground; remove -N and it will background itself
sudo squid -f $SQUID_DIR/squid.conf
