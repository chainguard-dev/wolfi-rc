#!/bin/sh

set -e

# Setup a Chainguard Workstation to use a squid caching proxy on localhost for downloads
# Use SSL Bumping to handle https traffic
# Largely inspired by: https://rasika90.medium.com/how-i-saved-tons-of-gbs-with-https-caching-41550b4ada8a

SQUID_DIR=/tmp/squid
CERTS_DIR=/etc/ssl/certs

# Install squid and openssl
sudo apk update
sudo apk add squid openssl ca-certificates
sudo rm -rf $SQUID_DIR
mkdir -p $SQUID_DIR

# Initialize cert db
/usr/libexec/security_file_certgen -c -s $SQUID_DIR/ssl_db -M 100

# Generate our self-signed SSL certs
cd $CERTS_DIR
rm -f squid-*
sudo openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 -extensions v3_ca -keyout squid-self-signed.key -out squid-self-signed.crt -subj "/C=US/ST=Chain/L=Guard/O=Eng/CN=localhost"
# Convert the cert into a trusted certificate in DER format.
sudo openssl x509 -in squid-self-signed.crt -outform DER -out squid-self-signed.der
# Convert the cert into a trusted certificate in PEM format.
sudo openssl x509 -in squid-self-signed.crt -outform PEM -out squid-self-signed.pem
# Generate the settings file for the Diffie-Hellman algorithm.
sudo openssl dhparam -outform PEM -out squid-self-signed_dhparam.pem 2048
sudo cp -f squid-self-signed.pem squid-self-signed.crt
sudo update-ca-certificates

TIMESTAMP=$(date +%Y%m%d%H%M%S)

# Setup curl config
[ -f $HOME/.curlrc ] && mv -f $HOME/.curlrc $HOME/.curlrc.$TIMESTAMP
cat >$HOME/.curlrc <<EOF
proxy=127.0.0.1:3128
cacert=$CERTS_DIR/squid-self-signed.pem
EOF

# Setup wget config
[ -f $HOME/.wgetrc ] && mv -f $HOME/.wgetrc $HOME/.wgetrc.$TIMESTAMP
cat >$HOME/.wgetrc <<EOF
use_proxy=yes
http_proxy=127.0.0.1:3128
https_proxy=127.0.0.1:3128
ca_certificate=$CERTS_DIR/squid-self-signed.pem
EOF

# Setup pip config
mkdir -p $HOME/.config/pip
[ -f $HOME/.config/pip/pip.conf ] && mv -f $HOME/.config/pip/pip.conf $HOME/.config/pip/pip.conf.$TIMESTAMP
cat >$HOME/.config/pip/pip.conf <<EOF
[global]
proxy = 127.0.0.1:3128
cert = $CERTS_DIR/squid-self-signed.pem
EOF

# Setup openssl config
[ -f /etc/ssl/openssl.cnf ] && cp -a /etc/ssl/openssl.cnf /etc/ssl/openssl.cnf.$TIMESTAMP
sed -i -e '/^keyUsage = cRLSign, keyCertSign/d' -e 's/^\[ v3_ca \]/\[ v3_ca \]\nkeyUsage = cRLSign, keyCertSign/' /etc/ssl/openssl.cnf


# Setup squid config
cat >$SQUID_DIR/squid.conf <<EOF
acl intermediate_fetching transaction_initiator certificate-fetching
http_access allow intermediate_fetching
acl localnet src 127.0.0.1/32
acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 21
acl Safe_ports port 443
acl Safe_ports port 1025-65535
acl Safe_ports port 777
acl CONNECT method CONNECT
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
http_access allow localhost manager
http_access deny manager
http_access allow localhost
http_access deny to_localhost
http_access deny to_linklocal
http_access deny all
http_port 3128 tcpkeepalive=60,30,3 ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=20MB tls-cert=$CERTS_DIR/squid-self-signed.crt tls-key=$CERTS_DIR/squid-self-signed.key cipher=HIGH:MEDIUM:!LOW:!RC4:!SEED:!IDEA:!3DES:!MD5:!EXP:!PSK:!DSS options=NO_TLSv1,NO_SSLv3 tls-dh=prime256v1:$CERTS_DIR/squid-self-signed_dhparam.pem
sslcrtd_program /usr/libexec/security_file_certgen -s $SQUID_DIR/ssl_db -M 100MB
sslcrtd_children 5
ssl_bump server-first all
ssl_bump stare all
sslproxy_cert_error deny all
coredump_dir $SQUID_DIR
maximum_object_size 6 GB
cache_mem 8192 MB
cache_dir ufs $SQUID_DIR 32000 16 256
access_log $SQUID_DIR/squid.log
refresh_pattern -i .(jar|zip|whl|gz|bz)  259200 20% 259200
refresh_pattern .  0 20% 4320
EOF

# Initialize squid directories
sudo chmod 700 $SQUID_DIR
sudo chown -R nobody $SQUID_DIR
sudo squid -f $SQUID_DIR/squid.conf -z

# Launch squid (will drop privileges and background itself)
sudo squid -f $SQUID_DIR/squid.conf -N
